<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!-- 只有这一份配置是线上生产的，注意不要使用logback-prod作为名字，因为logback-spring才是正确的名字。 -->
    <!--获取配置中的参数信息-->


    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <!-- 自动新建文件夹 -->
    <property name="DEV_HOME" value="./logs"/>

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--            <pattern>%d{YY-MM-dd HH:mm:ss.SSS} id:[%X{sessionTokenId}] %-5level %logger{32}[%line] - %msg %n</pattern>-->
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %highlight(%-5level) %yellow(at %class.%method) \(%file:%line\)  - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- debug输出到文件 -->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${DEV_HOME}/debug.log</file>
        <!-- 设置滚动策略 -->
        <!-- 按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--设置日志命名模式 -->
            <fileNamePattern>${DEV_HOME}/debug.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为60天，60天之前的都将被清理掉 这里的值与滚动策略模式有关 -->
            <maxHistory>180</maxHistory>
            <!-- 按照日期进行归档，并且对日志文件大小进行限制 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 设置文件大于1KB进行压缩归档 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder><!-- 格式化输出 -->
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
    </appender>

    <!-- info输出到文件 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${DEV_HOME}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${DEV_HOME}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>60</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${DEV_HOME}/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${DEV_HOME}/warn.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>60</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${DEV_HOME}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${DEV_HOME}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>60</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n</pattern>
        </encoder>
    </appender>


    <!--邮件发送-->
        <appender name="EMAIL" class="ch.qos.logback.classic.net.SMTPAppender">
            <!--smtp 服务器-->
            <smtpHost>smtp.163.com</smtpHost>
            <!--port-->
            <smtpPort>25</smtpPort>
            <!-- 发给谁的邮件列表，多个人用逗号分隔 -->
            <to>aohanhongzhi@qq.com</to>
            <!--发件人，添加邮箱和上面的username保持一致-->
            <from>aohanhongzhi@163.com</from>
            <subject>${logname}： %logger - %msg</subject>
            <!--发件人的邮箱-->
            <username>aohanhongzhi@163.com</username>
            <!--发件人的邮箱密码-->
            <password>Passw0rd</password>
            <SSL>false</SSL>
            <!--是否异步-->
            <asynchronousSending>true</asynchronousSending>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            </layout>
            <cyclicBufferTracker class = "ch.qos.logback.core.spi.CyclicBufferTracker" >
                <bufferSize> 1 </bufferSize>
            </cyclicBufferTracker>
            <!--过滤器-->
            <!-- 这里采用等级过滤器 指定等级相符才发送 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>


    <root level="debug">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="WARN_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="EMAIL"/>
    </root>

    <logger name="hxy.print.*" level="info" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="DEBUG_FILE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="WARN_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="EMAIL"/>
    </logger>

    <!-- 2. 输出SQL 的参数到控制台和文件-->
    <!--<logger name="org.hibernate.type.descriptor.sql.BasicBinder" additivity="false" level="TRACE" >-->
    <!--<appender-ref ref="DEBUG_FILE" />-->
    <!--<appender-ref ref="CONSOLE" />-->
    <!--</logger>-->

</configuration>